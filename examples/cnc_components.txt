# define ob_rec which is a 2D rectangle
group rectangle(cs0, width, height):
  # create 4 points
  a = point(0, 0, 0)
  b = point(width, 0, 0)
  c = point(width, height, 0)
  d = point(0, height, 0)
  
  # create 4 lines
  ab = line(a, b)
  bc = line(b, c)
  cd = line(c, d)
  da = line(d, a)
  
  # create surface bounded by lines
  res = surface(ab, bc, cd, da)
  
# define ob_pipe which is a pipe with a square basis
group sqr_pipe(cs0, side, thick, length):
  # create 1st square
  rec_1 = rectangle(cs0, side, side)
  
  # create 2nd sqare in a new coordinate system
  #p0_sqr2 = point(thick, thick, 0)
  cs_sqr2 = coord_sys(cs0, TRANSLATE, thick*vx + thick*vy)  
  rec_2 = rectangle(cs_sqr2, side - 2*thick, side - 2*thick)
  
  # cut sqare 1 by square 2
  section = surface(CUT, rec_1.res, rec_2.res)
  # hide squares
  rec_1.hide()
  rec_2.hide()
  
  # extrude section 
  res = solid(EXTRUSION, section, vz*length)



group hex(cs0, side_len):
  # hexagone 
  # c**2 = (c/2)**2 + (h/2)**2
  # (h/2)**2 = c**2 - (c/2)**2
  #  h/2 = c*sqr(3)/2
  # h = c*sqr(3)
  hexa_height = side_len * sqrt(3)
  a = point(-side_len, 0, 0)
  b = point(-side_len/2, hexa_height/2, 0)
  c = point(side_len/2, hexa_height/2, 0)
  d = point(side_len, 0, 0)
  e = point(side_len/2, -hexa_height/2, 0)
  f = point(-side_len/2, -hexa_height/2, 0)

  ab  = line(a, b)
  bc  = line(b, c)
  cd  = line(c, d)
  de  = line(d, e)
  ef  = line(e, f)
  fa  = line(f, a)
  
  res  = surface(ab, bc, cd, de, ef, fa)

group nut(cs0, side_len, int_diam, thi):

  hexa = hex(cs0, side_len)
  # hole
  c1 = circle(p0, vz, int_diam/2)
  su_c1  = surface(c1)

  # intersection
  section  = surface(CUT, hexa.res, su_c1)
  hexa.hide()
  su_c1.hide()

  res = solid(EXTRUSION, section, vz*thi)


group rod(cs0, diam, len):
  c1 = circle(p0, vz, diam/2)
  sc1  = surface(c1) 
  # TODO: DEBUG!!!
  #sc1  = surface(circle(p0, vz, diam/2))
  sc1.hide()
  res = solid(EXTRUSION, sc1, vz*len)


group roll(cs0, int_diam, ext_diam, height):
  c1 = circle(p0, vz, ext_diam/2)
  sc1  = surface(c1)
  c2 = circle(p0, vz, int_diam/2)
  sc2  = surface(c2)
  # intersection
  section  = surface(CUT, sc1, sc2)
  sc1.hide()
  sc2.hide()
  res = solid(EXTRUSION, section, vz*height)


# instanciated obj
group washer_8(cs0):
  r = roll(cs0, 8, 11, 3)
  res = r.res
  
group roll_20(cs0):
  r = roll(cs0, 8, 20, 7)
  res = r.res

group nut_8(cs0):
  res = nut(cs0, 8, 8, 6)
  
group roll_mount(cs0, g_vars):
  cs_nut_1 = coord_sys(cs0, TRANSLATE, 
			-g_vars.nut_8_thi*vz)
  nut_1 = nut_8(cs_nut_1)
  
  cs_washer_1 = coord_sys(cs_nut_1, TRANSLATE, 
	(g_vars.nut_8_thi + g_vars.pipe_wid)*vz)
  washer_1 = washer_8(cs_washer_1)
  
  cs_roll_1 = coord_sys(cs_washer_1, TRANSLATE, 
		g_vars.washer_thi*vz)  
  roll_1 = roll_20(cs_roll_1)

  cs_nut_2 = coord_sys(cs_roll_1, TRANSLATE, 
		g_vars.roll_20_thi*vz)
  nut_2 = nut_8(cs_nut_2)
  
  
group rod_mount(cs0, g_vars):
  # margin after nuts
  offset = -g_vars.margin -g_vars.nut_8_thi 
  cs_rod_1 = coord_sys(cs0, TRANSLATE, offset*vz) 
  rod_1 = rod(cs_rod_1, g_vars.rod_8_diam, 
	g_vars.cha_wid + 2*(g_vars.nut_8_thi+g_vars.margin))
  
  # bottom rod_mount
  rm_1 = roll_mount(cs0, g_vars)
  
  # top rod_mount
  cs_rm_2 = coord_sys(cs0, ROTATE, vy, 3.14)
  cs_rm_2 = coord_sys(cs_rm_2, TRANSLATE, 
			g_vars.cha_wid*vz)
  
  rm_2 = roll_mount(cs_rm_2, g_vars) 
  

# GLOBAL VARS
group vars(cs0):
  margin = 2
  pipe_wid  = 20
  pipe_thi = 1.5
  pipe_len = 200
  cha_wid = 100 
  rod_1_1 = 10
  rod_1_2 = pipe_len - rod_1_1
  rod_2_1 = 20
  rod_2_2 = pipe_len - rod_2_1
  rod_8_diam = 8
  nut_8_side = 12 
  nut_8_thi = 6
  washer_thi = 3
  roll_20_thi = 7
  
  
  
####### MAIN  
# variables
g_vars = vars(cs0)

# pipes
pipe_1 = sqr_pipe(cs0, g_vars.pipe_wid, g_vars.pipe_thi, g_vars.pipe_len)

#TODO: ADD sub operation
vt = vx*(g_vars.cha_wid -g_vars.pipe_wid)
cs = coord_sys(TRANSLATE, vt)
pipe_2 = sqr_pipe(cs, g_vars.pipe_wid, g_vars.pipe_thi, g_vars.pipe_len)

vt += vy*(g_vars.cha_wid -g_vars.pipe_wid)
cs = coord_sys(TRANSLATE, vt)
pipe_3 = sqr_pipe(cs, g_vars.pipe_wid, g_vars.pipe_thi, g_vars.pipe_len)

vt = vy*(g_vars.cha_wid -g_vars.pipe_wid)
cs = coord_sys(TRANSLATE, vt)
pipe_4 = sqr_pipe(cs, g_vars.pipe_wid, g_vars.pipe_thi, g_vars.pipe_len)



# 8 rods
# first side
cs_y = coord_sys(cs0, ROTATE, vx, -pi/2)
cs_rm1 = coord_sys(cs_y, TRANSLATE, vx*(g_vars.pipe_wid/2))
cs_rm1_1 = coord_sys(cs_rm1, TRANSLATE, vz*g_vars.rod_1_1)
rm_1_1 = rod_mount(cs_rm1_1, g_vars)

cs_rm1_2 = coord_sys(cs_rm1, TRANSLATE, vz*g_vars.rod_1_2)
rm_1_2 = rod_mount(cs_rm1_2, g_vars)

cs_rm2 = coord_sys(cs_rm1, TRANSLATE, 
		vx*(g_vars.cha_wid - g_vars.pipe_wid))
cs_rm2_1 = coord_sys(cs_rm2, TRANSLATE, vz*g_vars.rod_1_1)
rm_2_1 = rod_mount(cs_rm2_1, g_vars)

cs_rm2_2 = coord_sys(cs_rm2, TRANSLATE, vz*g_vars.rod_1_2)
rm_2_2 = rod_mount(cs_rm2_2, g_vars)

# second side
cs_x = coord_sys(cs0, ROTATE, vy, pi/2)
cs_rm3 = coord_sys(cs_x, TRANSLATE, vy*(g_vars.pipe_wid/2))
cs_rm3_1 = coord_sys(cs_rm3, TRANSLATE, vz*g_vars.rod_2_1)
rm_3_1 = rod_mount(cs_rm3_1, g_vars)

cs_rm3_2 = coord_sys(cs_rm3, TRANSLATE, vz*g_vars.rod_2_2)
rm_3_2 = rod_mount(cs_rm3_2, g_vars)

cs_rm4= coord_sys(cs_rm3, TRANSLATE, 
	vy*(g_vars.cha_wid - g_vars.pipe_wid))
cs_rm4_1 = coord_sys(cs_rm4, TRANSLATE, vz*g_vars.rod_2_1)
rm_4_1 = rod_mount(cs_rm4_1, g_vars)

cs_rm4_2 = coord_sys(cs_rm4, TRANSLATE, vz*g_vars.rod_2_2)
rm_4_2 = rod_mount(cs_rm4_2, g_vars)
